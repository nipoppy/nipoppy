.. Note: This page has to be in ReST format, not Markdown
.. because otherwise there are issues with linking between the schemas

File schemas
============

This page contains auto-generated :term:`JSON` schemas [#f1]_ for the text files used or generated by Nipoppy.

.. _config-schema:

Global configuration file
-------------------------

.. tip::

    See the :ref:`Quickstart guide <customizing-config>` for an example config file.

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

Below is the schema used for the global configuration :term:`JSON` file.

.. jsonschema:: config.json

Tracker configuration file
~~~~~~~~~~~~~~~~~~~~~~~~~~

The tracker configuration file specified in the `ProcPipelineConfig`_ should be a :term:`JSON` file that contains **a list** of tracker configurations.
The schema for each individual tracker configuration is shown below.

.. jsonschema:: tracker.json
    :lift_title: False

.. _manifest-schema:

Manifest file
-------------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

Here is the schema for the manifest file:

.. jsonschema:: manifest.json
    :lift_title: False

.. _doughnut-schema:

Doughnut file
-------------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

Here is the schema for the doughnut file:

.. jsonschema:: doughnut.json
    :lift_title: False

Bagel file
----------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

Here is the schema for the bagel file:

.. jsonschema:: bagel.json
    :lift_title: False

.. _dicom-dir-map-schema:

DICOM directory mapping file
----------------------------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

Here is the schema for the DICOM directory mapping file:

.. jsonschema:: dicom_dir_map.json
    :lift_title: False

.. _layout-schema:

Layout configuration
--------------------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

.. admonition:: The default Nipoppy layout
    :class: dropdown

    The default Nipoppy layout uses the following configuration:

    .. literalinclude:: ../../../nipoppy/data/layouts/layout-default.json
        :linenos:
        :language: json

Here is the schema used for :term:`JSON` files that define the layout of the dataset:

.. jsonschema:: layout.json
    :lift_title: False

Custom Nipoppy configurations in a Boutiques descriptor
-------------------------------------------------------

.. include:: schema_howto.md
    :parser: myst_parser.sphinx_

Nipoppy can read additional configurations from a Boutiques descriptor, under the
``custom\nipoppy`` key. The :term:`JSON` object is expected to comply with the following schema:

.. This has a link to the ContainerConfig schema pointing to the one that appears
.. under the Config schema, but there is another ContainerConfig schema under the
.. BoutiquesConfig schema
.. jsonschema:: boutiques.json
    :lift_title: False

.. Footer
.. [#f1] Created with `sphinx-jsonschema <https://github.com/lnoor/sphinx-jsonschema>`_
