{
    "name": "heudiconv",
    "description": "heudiconv",
    "tool-version": "0.12.2",
    "schema-version": "0.5",
    "command-line": "[[NIPOPPY_CONTAINER_COMMAND]] [[NIPOPPY_FPATH_CONTAINER]] [VERSION] [DICOM_DIR_TEMPLATE] [FILES] [SUBJS] [CONVERTER] [OUTDIR] [LOCATOR] [CONV_OUTDIR] [ANON_CMD] [HEURISTIC] [WITH_PROV] [SESSION] [BIDS_OPTIONS] [OVERWRITE] [DATALAD] [DEBUG] [COMMAND] [GROUPING] [MINMETA] [RANDOM_SEED] [DCMCONFIG] [QUEUE] [QUEUE_ARGS]",
    "inputs": [
        {
            "name": "version",
            "id": "version",
            "description": "show program's version number and exit",
            "type": "String",
            "optional": true,
            "command-line-flag": "--version",
            "value-key": "[VERSION]"
        },
        {
            "name": "dicom_dir_template",
            "id": "dicom_dir_template",
            "description": "Location of dicomdir that can be indexed with subject id {subject} and session {session}. Tarballs (can be compressed) are supported in addition to directory. All matching tarballs for a subject are extracted and their content processed in a single pass. If multiple tarballs are found, each is assumed to be a separate session and the --ses argument is ignored. Note that you might need to surround the value with quotes to avoid {...} being considered by shell",
            "type": "String",
            "optional": true,
            "command-line-flag": "-d",
            "value-key": "[DICOM_DIR_TEMPLATE]"
        },
        {
            "name": "files",
            "id": "files",
            "description": "Files (tarballs, dicoms) or directories containing files to process. Cannot be provided if using --dicom_dir_template.",
            "type": "String",
            "optional": true,
            "command-line-flag": "--files",
            "value-key": "[FILES]"
        },
        {
            "name": "subjs",
            "id": "subjs",
            "description": "List of subjects - required for dicom template. If not provided, DICOMS would first be \"sorted\" and subject IDs deduced by the heuristic.",
            "type": "String",
            "optional": true,
            "command-line-flag": "-s",
            "value-key": "[SUBJS]"
        },
        {
            "name": "converter",
            "id": "converter",
            "description": "Tool to use for DICOM conversion. Setting to \"none\" disables the actual conversion step -- useful for testing heuristics.",
            "type": "String",
            "optional": true,
            "default-value": "dcm2niix",
            "command-line-flag": "-c",
            "value-key": "[CONVERTER]",
            "value-choices": [
                "dcm2niix",
                "none"
            ]
        },
        {
            "name": "outdir",
            "id": "outdir",
            "description": "Output directory for conversion setup (for further customization and future reference. This directory will refer to non-anonymized subject IDs.",
            "type": "String",
            "optional": true,
            "command-line-flag": "-o",
            "value-key": "[OUTDIR]"
        },
        {
            "name": "locator",
            "id": "locator",
            "description": "Study path under outdir. If provided, it overloads the value provided by the heuristic. If --datalad is enabled, every directory within locator becomes a super-dataset thus establishing a hierarchy. Setting to \"unknown\" will skip that dataset.",
            "type": "String",
            "optional": true,
            "command-line-flag": "-l",
            "value-key": "[LOCATOR]"
        },
        {
            "name": "conv_outdir",
            "id": "conv_outdir",
            "description": "Output directory for converted files. By default this is identical to --outdir. This option is most useful in combination with --anon-cmd.",
            "type": "String",
            "optional": true,
            "command-line-flag": "-a",
            "value-key": "[CONV_OUTDIR]"
        },
        {
            "name": "anon_cmd",
            "id": "anon_cmd",
            "description": "Command to run to convert subject IDs used for DICOMs to anonymized IDs. Such command must take a single argument and return a single anonymized ID. Also see --conv-outdir.",
            "type": "String",
            "optional": true,
            "command-line-flag": "--anon-cmd",
            "value-key": "[ANON_CMD]"
        },
        {
            "name": "heuristic",
            "id": "heuristic",
            "description": "Name of a known heuristic or path to the Python script containing heuristic.",
            "type": "String",
            "optional": true,
            "command-line-flag": "-f",
            "value-key": "[HEURISTIC]"
        },
        {
            "name": "with_prov",
            "id": "with_prov",
            "description": "Store additional provenance information. Requires python-rdflib.",
            "type": "Flag",
            "optional": true,
            "command-line-flag": "-p",
            "value-key": "[WITH_PROV]"
        },
        {
            "name": "session",
            "id": "session",
            "description": "Session for longitudinal study_sessions. Default is None.",
            "type": "String",
            "optional": true,
            "command-line-flag": "-ss",
            "value-key": "[SESSION]"
        },
        {
            "name": "bids_options",
            "id": "bids_options",
            "description": "Flag for output into BIDS structure. Can also take BIDS-specific options, e.g., --bids notop. The only currently supported options is \"notop\", which skips creation of top-level BIDS files. This is useful when running in batch mode to prevent possible race conditions.",
            "type": "String",
            "optional": true,
            "command-line-flag": "-b",
            "value-key": "[BIDS_OPTIONS]",
            "value-choices": [
                "notop"
            ]
        },
        {
            "name": "overwrite",
            "id": "overwrite",
            "description": "Overwrite existing converted files.",
            "type": "Flag",
            "optional": true,
            "command-line-flag": "--overwrite",
            "value-key": "[OVERWRITE]"
        },
        {
            "name": "datalad",
            "id": "datalad",
            "description": "Store the entire collection as DataLad dataset(s). Small files will be committed directly to git, while large to annex. New version (6) of annex repositories will be used in a \"thin\" mode so it would look to mortals as just any other regular directory (i.e. no symlinks to under .git/annex). For now just for BIDS mode.",
            "type": "Flag",
            "optional": true,
            "command-line-flag": "--datalad",
            "value-key": "[DATALAD]"
        },
        {
            "name": "debug",
            "id": "debug",
            "description": "Do not catch exceptions and show exception traceback.",
            "type": "Flag",
            "optional": true,
            "command-line-flag": "--dbg",
            "value-key": "[DEBUG]"
        },
        {
            "name": "command",
            "id": "command",
            "description": "Custom action to be performed on provided files instead of regular operation.",
            "type": "String",
            "optional": true,
            "command-line-flag": "--command",
            "value-key": "[COMMAND]",
            "value-choices": [
                "heuristics",
                "heuristic-info",
                "ls",
                "populate-templates",
                "sanitize-jsons",
                "treat-jsons",
                "populate-intended-for"
            ]
        },
        {
            "name": "grouping",
            "id": "grouping",
            "description": "How to group dicoms (default: by studyUID).",
            "type": "String",
            "optional": true,
            "default-value": "studyUID",
            "command-line-flag": "-g",
            "value-key": "[GROUPING]",
            "value-choices": [
                "studyUID",
                "accession_number",
                "all",
                "custom"
            ]
        },
        {
            "name": "minmeta",
            "id": "minmeta",
            "description": "Exclude dcmstack meta information in sidecar jsons.",
            "type": "Flag",
            "optional": true,
            "command-line-flag": "--minmeta",
            "value-key": "[MINMETA]"
        },
        {
            "name": "random_seed",
            "id": "random_seed",
            "description": "Random seed to initialize RNG.",
            "type": "Number",
            "optional": true,
            "command-line-flag": "--random-seed",
            "value-key": "[RANDOM_SEED]"
        },
        {
            "name": "dcmconfig",
            "id": "dcmconfig",
            "description": "JSON file for additional dcm2niix configuration.",
            "type": "String",
            "optional": true,
            "command-line-flag": "--dcmconfig",
            "value-key": "[DCMCONFIG]"
        },
        {
            "name": "queue",
            "id": "queue",
            "description": "Batch system to submit jobs in parallel.",
            "type": "String",
            "optional": true,
            "command-line-flag": "-q",
            "value-key": "[QUEUE]",
            "value-choices": [
                "SLURM"
            ]
        },
        {
            "name": "queue_args",
            "id": "queue_args",
            "description": "Additional queue arguments passed as a single string of space-separated Argument=Value pairs.",
            "type": "String",
            "optional": true,
            "command-line-flag": "--queue-args",
            "value-key": "[QUEUE_ARGS]"
        }
    ],
    "tags": {},
    "suggested-resources": {
        "cpu-cores": 1,
        "ram": 1,
        "walltime-estimate": 60
    }
}
